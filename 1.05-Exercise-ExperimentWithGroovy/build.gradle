/*

Welcome to the solutions to the Groovy Playground exercise! You can run these
tasks by telling Gradle to use this build script, instead of the default
build.gradle. To run the task below, use:

    $ gradle -b solution.gradle stringsAndTypes

or, more compactly

    $ gradle -b solution.gradle sAT

*/

task stringsAndTypes {
    doLast {
        // COMPLETED: Run `$ gradle sAT`
        println "Nice work abbreviating the task name"

        // COMPLETED Create a variable named foo and assign it the value 4.2
        def foo = 4.2

        // COMPLETED Print the value and class of foo
        println "Foo is type of class ${foo.class} and has value $foo"

        // COMPLETED Use string interpolation to print the square root of 127
        // HINT: http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html
        println "Square root of 127 is ${Math.sqrt(127)}"

        // COMPLETED Assign the current date to foo and print it, along with its type
        // HINT: http://docs.oracle.com/javase/7/docs/api/java/util/package-summary.html
        foo = new java.util.Date()
        println "Foo is now ${foo.class} and has value $foo"

        // COMPLETED Use the `substring` method to extract my name from this string
        def hello = "Hello, Jeremy."
        def name = hello.substring(7,13)

        // COMPLETED Use `toUpperCase` to capitalize and print my name
        println name.toUpperCase()

    }
}


task closures {
    doLast {
        // COMPLETED Declare a closure that takes two arguments and adds them together
        // HINT: http://www.groovy-lang.org/closures.html
        def additionClosure = {
            x, y -> x + y
        }

        // COMPLETED Call your closure with arguments 17 and 25, and print the result
        // Beware that something like `println addTwo 17, 25` is ambiguous
        println additionClosure(17,25)
    }
}

task lists {
    doLast {
        // COMPLETED Declare a list containing 5 of your favorite candies
        // HINT: Try searching for "groovy list literal"
        List candies = ["Lollipop", "Chocolate", "Froyo", "Bublegum", "Cake"]

        // COMPLETED Create a new list of your candies in all caps
        // HINT: http://mrhaki.blogspot.ca/2010/05/groovy-goodness-use-collect-with.html
        List uppercaseCandies = candies.collect { it.toUpperCase() }

        // COMPLETED Print each capital candy
        uppercaseCandies.each { println "The candy name is $it" }

        //Note: List can be changed to 'def' type
    }
}
